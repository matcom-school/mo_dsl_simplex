Let N : { x | x in Naturals };
Let X : { x | x in Variables };
Let R : { X | X in Reals };

Let Nplus : { x | x in N, x > 0  }; // la sintaxis tal que (|) es un serie de definiciones 
                                    // cada definicion puede tener o no una sequencia de condiciones separadas por (,)
                                    // las definiciones se ejecuta de atras hacia adelante 

Let Mmxn : { M | M in (R^n)^m, n,m in N }; // [(val,)*]val las comas y variables pegadas para listar ????   

Let M in Mmxn Def matrix_width(M) = m | m = max({ j | M[i, j] in R, i in N })
Let M in Mmxn Def matrix_height(M) = m | m = max({ i | M[i, j] in R, j in N })

Let A in Mmxn ,                                           // La declaracion de variables lista de definiciones, 
  Def transposed like transposed(A) = ATransposed |       // seguida de lista de condiciones que concluyen con Def                                       
    ATransposed[i,j] = A[j,i], i,j in N, i <= matrix_height(A) and j <= matrix_width(A);


Let n in N, c in R^n and x in X^n 
  Def LinealEq like transposed(c) * x

Conflicto en esta  propuesta 
Como referecias las dependecinas de una definicion ?? 
    - LinealEq(n, c, x)
    - LinealEq where x=x